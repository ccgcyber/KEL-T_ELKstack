input {

  file{
    
    path => "/Volumes/Extended/ELK/Log/Fortigate/172.20.2.254(SF)/anylog.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"			

  }
}

filter{

    ruby{

          code=>"

              event['logtype']='Fortigate Firewall 5.0 Log (SF)'

              array=event['message'].split(' ')
              i=2
             
              while i<array.size
                z=array[i].gsub(/[\\"]/, '')
                z=z.split('=')

                  while not(/=/ === array[i+1])

                    if array[i+1].nil?
                      z[1]=z[1].split(',')
                      z[1]=z[1][0]
                      break
                    end

                    q=array[i+1].gsub(/[\\"]/, '')
                    z[1]=z[1]+' '+q
                    i=i+1

                  end 

                if(/\A[-+]?\d+\z/ === (z[1]))
                  z[1]=z[1].to_i
                end

                event[z[0]]=z[1]
                i=i+1
              end

              g=array[array.size-1].split(',')
              i=4

              z=g[1].gsub(/[\\",]/, '')
              z=z.split(':')
              event[z[0]]=z[1]

              z=g[2].gsub(/[\\",]/, '')
              z=z.split(':')
              comb=z[1]+':'+z[2]+':'+z[3]
              event['timestamp2']=comb

              z=g[3].gsub(/[\\"}]/, '')
              z=z.split(':')
              event['filetype']=z[1]

              while i<g.size
                z=g[i].gsub(/[\\"\]\[}]/, '')
                z=z.split(':')
                
                if(z[0]=='tags')
                  while not(/:/ === g[i+1])
                    q=g[i+1].gsub(/[\\"\]\[}]/, '')
                    z[1]=z[1]+', '+q
                    i=i+1
                  end
                end

                event[z[0]]=z[1]
                i=i+1

              end

            "

    }

     grok {
        match => { "timestamp2" => "%{TIMESTAMP_ISO8601:timestamp}" }
        }


      date {
    match => ["timestamp","ISO8601"]
    target => "@timestamp"
  }

    geoip {
      source => "srcip"
      target => "geoip_src"
      database => "/path/Extended/ELK/Es Kibana - Twitter/logstash-1.5.2/GeoLiteCity.dat"
      add_field => [ "[geoip_src][coordinates]", "%{[geoip_src][longitude]}" ]
      add_field => [ "[geoip_src][coordinates]", "%{[geoip_src][latitude]}"  ]


    }

      geoip {
      source => "dstip"
      target => "geoip_dst"
      database => "/Volumes/Extended/ELK/Es Kibana - Twitter/logstash-1.5.2/GeoLiteCity.dat"
      add_field => [ "[geoip_dst][coordinates]", "%{[geoip_dst][longitude]}" ]
      add_field => [ "[geoip_dst][coordinates]", "%{[geoip_dst][latitude]}"  ]
    }


      mutate {

    remove_field => [ "timestamp","timestamp2"] 
    convert => [ "[geoip_src][coordinates]", "float"]
    convert => [ "[geoip_dst][coordinates]", "float"]


  }


}




output {

  elasticsearch { 

  host => "localhost"
  index => "fortigate(sf)-%{+yyyy.MM.dd}"

   }
  
  
}

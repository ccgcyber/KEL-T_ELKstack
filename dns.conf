input {

  file{
    
    path => "/Users/hazimhanif/Extended/Log/log DNS 3/*"
    type => "DNS Query Log"
    start_position => "beginning"

  }
}
 
filter{

        grok {
        patterns_dir => "/Users/hazimhanif/Extended/Patterns/extra"
        keep_empty_captures => true
        match => { "message" => "%{DNS_BIND_QLOG}" }
        }

      date {
    match => ["Timestamp","d-MMM-yyyy HH:mm:ss.SSS" , "dd-MMM-yyyy HH:mm:ss.SSS"]
    target => "@timestamp"
  }



        geoip {
      source => "ClientIP"
      target => "geoip"
      add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
      add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
    }
    mutate {
      convert => [ "[geoip][coordinates]", "float"]
    }




  if[RecursionRequest]=="+" {

      mutate {
         replace => [ "RecursionRequest", "Yes" ]
      }
  }else{

      mutate {
         replace => [ "RecursionRequest", "No" ]
      }
  }

    if[Request]=="S" {

      mutate {
         replace => [ "Request", "Signed" ]
      }
  }else{

      mutate {
         replace => [ "Request", "Unsigned" ]
      }
  }

    if[EDNS0]=="E" {

      mutate {
         replace => [ "EDNS0", "Enable" ]
      }
  }else{

      mutate {
         replace => [ "EDNS0", "Disable" ]
      }
  }

    if[DNSSEC]=="D" {

      mutate {
         replace => [ "DNSSEC", "Requested" ]
      }
  }else{

      mutate {
         replace => [ "DNSSEC", "Unrequested" ]
      }
  }

    if[CheckingDisabled]=="C" {

      mutate {
         replace => [ "CheckingDisabled", "True" ]
      }
  }else{

      mutate {
         replace => [ "CheckingDisabled", "False" ]
      }
  }

    if[Protocol]=="T" {

      mutate {
         replace => [ "Protocol", "TCP" ]
      }
  }else{

      mutate {
         replace => [ "Protocol", "UDP" ]
      }
  }
        

    mutate {
    remove_field => [ "Timestamp" ] 
  }



  }


output {

  elasticsearch { 

  host => "localhost"
  index => "dns-%{+yyyy.MM.dd}"

   }
  
}
